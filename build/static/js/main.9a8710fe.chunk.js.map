{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a8710fe.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className='btn'\n    >\n      {text}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  color: 'steelblue',\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd}) => {\n \n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n     <Button color={showAdd ? 'red' : 'green'} \n     text={showAdd ?  'Close' : 'Add'} \n     onClick={onAdd}/>\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headingStyle = {\n//   color: 'red',\n//   backgroundColor: 'black',\n// }\n\nexport default Header","import {FaTimes} from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ?\n        'reminder': ''}`} onDoubleClick={()=>onToggle(task.id)}>\n            <h3>{task.text}{''}\n            <FaTimes \n            style={{color:'red',cursor:'pointer'}}\n            onClick={()=> onDelete(task.id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n     <>\n     {tasks.map((task)=>(\n        <Task key={task.id} task={task} \n        onDelete={onDelete}\n        onToggle={onToggle}/>\n     ))}\n     </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nfunction AddTask({onAdd}) {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n       e.preventDefault()\n\n       if(!text){\n           alert('Please add a task')\n           return\n       }\n\n       onAdd({text, day, reminder})\n\n       setText('')\n       setDay('')\n       setReminder(false)\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type=\"text\" placeholder=\"Add task\"\n                value={text} onChange={(e)=>(setText(e.target.value))}/>\n            </div>\n            <div className='form-control'>\n                <label>Day and Time</label>\n                <input type=\"text\" placeholder=\"Add day and time\"\n                value={day} onChange={(e)=>(setDay(e.target.value))}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder}\n                value={reminder} onChange={(e)=>(setReminder(e.currentTarget.checked))}/>\n            </div>\n            <input type=\"submit\" value =\"Save Task\" className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","import {useState} from 'react'\nimport Header from './Components/Header'\nimport Tasks from './Components/Tasks'\nimport AddTask from './Components/AddTask'\n\nconst App =()=> {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  \n  //Add Task\n  const addTask =(task) => {\n    const id = Math.floor(Math.random()*10000) + 1\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id!==id))\n    \n  }\n\n  //Toggle reminder\n  const toggleRemainder = (id) =>{\n    setTasks(tasks.map((task)=> task.id ===id ? \n    {...task,reminder: !task.reminder}: task))\n  }\n  \n  return (\n    <div className=\"container\">\n      <Header onAdd={()=> setShowAddTask(!showAddTask)}\n      showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? \n      (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleRemainder}/>):\n       ('No task to Show')}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}