{"ast":null,"code":"import _toConsumableArray from\"/home/rudrakshi/Desktop/Rose/react-task-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/rudrakshi/Desktop/Rose/react-task-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/rudrakshi/Desktop/Rose/react-task-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import Header from'./Components/Header';import Tasks from'./Components/Tasks';import AddTask from'./Components/AddTask';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddTask=_useState2[0],setShowAddTask=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];//Add Task\nvar addTask=function addTask(task){var id=Math.floor(Math.random()*10000)+1;var newTask=_objectSpread({id:id},task);setTasks([].concat(_toConsumableArray(tasks),[newTask]));};//Delete Task\nvar deleteTask=function deleteTask(id){setTasks(tasks.filter(function(task){return task.id!==id;}));};//Toggle reminder\nvar toggleRemainder=function toggleRemainder(id){setTasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{reminder:!task.reminder}):task;}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onAdd:function onAdd(){return setShowAddTask(!showAddTask);},showAdd:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleRemainder}):'No task to Show']});};export default App;","map":{"version":3,"sources":["/home/rudrakshi/Desktop/Rose/react-task-tracker/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleRemainder","map","reminder","length"],"mappings":"yfAAA,OAAQA,QAAR,KAAuB,OAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAE,QAALA,CAAAA,GAAK,EAAK,eACwBJ,QAAQ,CAAC,KAAD,CADhC,wCACPK,WADO,eACMC,cADN,8BAEYN,QAAQ,CAAC,EAAD,CAFpB,yCAEPO,KAFO,eAEAC,QAFA,eAId;AACA,GAAMC,CAAAA,OAAO,CAAE,QAATA,CAAAA,OAAS,CAACC,IAAD,CAAU,CACvB,GAAMC,CAAAA,EAAE,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAc,KAAzB,EAAkC,CAA7C,CACA,GAAMC,CAAAA,OAAO,gBAAIJ,EAAE,CAAFA,EAAJ,EAAWD,IAAX,CAAb,CACAF,QAAQ,8BAAKD,KAAL,GAAYQ,OAAZ,GAAR,CACD,CAJD,CAMA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,EAAD,CAAQ,CACzBH,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAa,SAACP,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAUA,EAApB,EAAb,CAAD,CAAR,CAED,CAHD,CAKA;AACA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACP,EAAD,CAAO,CAC7BH,QAAQ,CAACD,KAAK,CAACY,GAAN,CAAU,SAACT,IAAD,QAASA,CAAAA,IAAI,CAACC,EAAL,GAAWA,EAAX,gCACxBD,IADwB,MACnBU,QAAQ,CAAE,CAACV,IAAI,CAACU,QADG,GACQV,IADjB,EAAV,CAAD,CAAR,CAED,CAHD,CAKA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAE,uBAAKJ,CAAAA,cAAc,CAAC,CAACD,WAAF,CAAnB,EAAf,CACA,OAAO,CAAEA,WADT,EADF,CAGGA,WAAW,eAAI,KAAC,OAAD,EAAS,KAAK,CAAEI,OAAhB,EAHlB,CAIGF,KAAK,CAACc,MAAN,CAAe,CAAf,cACA,KAAC,KAAD,EAAO,KAAK,CAAEd,KAAd,CAAqB,QAAQ,CAAES,UAA/B,CAA2C,QAAQ,CAAEE,eAArD,EADA,CAEC,iBANJ,GADF,CAUD,CAjCD,CAmCA,cAAed,CAAAA,GAAf","sourcesContent":["import {useState} from 'react'\nimport Header from './Components/Header'\nimport Tasks from './Components/Tasks'\nimport AddTask from './Components/AddTask'\n\nconst App =()=> {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  \n  //Add Task\n  const addTask =(task) => {\n    const id = Math.floor(Math.random()*10000) + 1\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id!==id))\n    \n  }\n\n  //Toggle reminder\n  const toggleRemainder = (id) =>{\n    setTasks(tasks.map((task)=> task.id ===id ? \n    {...task,reminder: !task.reminder}: task))\n  }\n  \n  return (\n    <div className=\"container\">\n      <Header onAdd={()=> setShowAddTask(!showAddTask)}\n      showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? \n      (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleRemainder}/>):\n       ('No task to Show')}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}